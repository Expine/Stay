@startuml UnderEngine

package under {
    package base {
        abstract Engine
        abstract Input
        abstract Screen

        package context {
            abstract ContextImage
            abstract Context
        }

        package scene {
            abstract SceneManager
            abstract Scene
        }

        package layer {
            abstract Layer
        }

        package stage {
            abstract StageParser
            abstract Stage
            abstract Map
            abstract Camera
            package entity {
                abstract Entity
                abstract ImmutableObject
                abstract MutableObject
                abstract AutonomyObject
            }
            package physics {
                abstract PhysicalWorld
                abstract CollisionResponse
                abstract Collider
                abstract Material
                abstract RigidBody
                class CollisionData
                class AABB
            }
            package ai {
                abstract AI
            }
        }
    }
}

Engine "1" *-- "1" Screen
Engine "1" *-- "1" Input
Engine "1" *-- "1" Context
Engine "1" *-- "1" SceneManager

SceneManager -> Input
Input -> Screen
Context -> Screen

SceneManager "1" *-- "*" Scene
SceneManager <-- Scene
Scene "1" o-- "*" Layer
Input <-- Scene
Context "1" *-- "1" ContextImage

StageParser --> Stage
Stage "1" *-- "1" Map
Stage "1" *-- "1" Camera
Stage "1" *-- "*" Entity
Stage "1" *-- "1" PhysicalWorld

Entity <|-- ImmutableObject
Entity <|-- MutableObject
MutableObject <|-- AutonomyObject

Entity "1" o-- "1" Collider
Entity "1" o-- "1" Material
RigidBody "1" --* "1" MutableObject
AutonomyObject "1" *-- "*" AI

PhysicalWorld "1" *-- "1" CollisionResponse
Collider "1" o-- "*" CollisionData
Collider "1" *-- "1" AABB

@enduml
