@startuml ParserJSON

package under {
    package extend {
        package ex_stage {
            package ex_parser {
                class JSONStageParser {
                    +JSONStageParser(tile,chara) : JSONStageParser
                    #tileBuilder : EntityBuilder
                    #charaBuilder : EntityBuilder
                    #makeBaseStage(stage) : Stage
                    #makeBaseMap(map) : Map
                    #makeMapElement(map,back) : Map
                    #makeBaseCamera(camera,width,height) : Camera
                    #makeBaseWorld() : PhysicalWorld
                    #addTile(base,chip,tileInfo)
                    #addEntity(base,entity,entityInfo)
                }
            }
        }
    }
}

package under {
    package base {
        package stage {
            package parser {
                abstract StageParser
            }
        }
    }
    package extend {
        package ex_stage {
            class SplitManagementStage
            package ex_parser {
                class TileBuilder
                class CharacterBuilder
            }
            package ex_camera {
                class CenterCamera
            }
            package ex_map {
                class InvariantBackMap
                class SequentialMap
            }
            package ex_physics {
                class SequentialWorld
                class RepulsionResponse
            }
        }

    }
}

JSONStageParser ..> SplitManagementStage : Generate
JSONStageParser ..> CenterCamera : Generate
JSONStageParser ..> SequentialMap : Generate
JSONStageParser ..> InvariantBackMap : Generate
JSONStageParser ..> SequentialWorld : Generate
JSONStageParser ..> RepulsionResponse : Generate

JSONStageParser ..> TileBuilder : "Default"
JSONStageParser ..> CharacterBuilder : "Default"

StageParser <|.. JSONStageParser

@enduml
