@startuml ExtendEngine

package extend {
    class UnderEngineBuilder {

    }

    class UnderEngine {
        -oldTime : number
        -render_ : lambda
    }
    package ex_input {
        class AllInput {
            -mouseX_
            -mouseY_
            -STATE : Enum<number>
            #inputMouse : Array<number>
            #inputKey : Array<number>
            +M : Enum<number>
        }
    }
    package ex_screen {
        class GeneratableScreen {
            +GeneratableScreen(width,height) : GeneratableScreen
            #canvas : Canvas
        }
        class ScalableScreen {
            +ScalableScreen(width,height) : ScalableScreen
        }
    }

    package ex_context {
        class JSContext {
            -fontColor_ : string
            -fontSize_ : number
            -fontName_ : string
            -lineColor_ : string
            -lineWidth_ : number
            -ctx_ : CanvasRenderingContext2D
        }
        class GLContext {
            -gl_ : WebGLRenderingContext
        }
        class CachedImage {
            -images : Array<Image>
            -caches : Dictionary<string, number>
        }
    }

    package ex_music {
        class XHTMLMusic {
            -music_ : Array<BufferSource>
            -bgmList_ : Array<number>
            -context_ : AudioContext
        }
    }

    package ex_scene {
        class StackSceneManager {
            -scenes_ : Array<Scene>
        }
        class DefaultTitleScene {
            -r_ : number
            -angle_ : number
        }
    }

    package ex_layer {
        class GameoverLayer {

        }
    }

    package ex_stage {
        class CSVStageParser {
            #makeBaseStage() : Stage
            #makeBaseMap(imageID,width,height) : Map
            #makeBaseCamera(width,height) : Camera
            #makeBaseWorld() : PhysicalWorld
            #makeTileobject(verticalId,horizontalId,tileWidth,tileHeight,x,y,width,height,imageID) : TileObject
        }
        class JSONStageParser {
            #makeBaseStage() : Stage
            #makeBaseMap(map) : Map
            #makeBaseCamera(camera,width,height) : Camera
            #makeBaseWorld() : PhysicalWorld
            #makeTileobject(tile,chip) : TileObject
        }
        class SplitManagementStage {
            -mutables_ : Array<MutableObject>
            -entities_ : Array<Entity>
            -player_ : Player
            -enable_ : bool
        }
        package ex_map {
            class InvariantBackMap {
                +InvariantBackMap(imageID,width,height)
                -backID_ : number
            }
            class SequentialMap {
                -maps_ : Array<Map>
            }
        }
        package camera {
            class CenterCamera {

            }
        }
        package ex_entity {
            class TileObject {
                #srcX : number
                #srcY : number
                #srcW : number
                #srcH : number
            }
            class Obstacle {

            }
            class SingleAIObject {
                #ai : Array<AI>
                #hp : number
            }
            class StateCharacter {
                #state : State
            }
            class Enemy {

            }
            class Player {
                -invincible_ : number
            }

            package ex_attack {
                abstract AttackObject {
                    #lifespan : number
                    {abstract} #judgeCollision : bool
                }
                class PunchObject {

                }
            }
        }
        package ex_physics {
            class CircleCollider
            class RectangleCollider
            class MaxAdoptBody
            class DefaultMaterial
            class ImpulseBased
            class Repulsion
            class SequentialWorld
        }
        package ex_ai {
            class PlayerAI
            class StraightAI
        }
    }

    package ex_util {
        class Util {
            {static} +onGround(entity) : bool
            {static} +getUnderEntity(entity) : Entity
            {static} +getCollidedEntity(self,data) : Entity
        }
    }
}

package main_scene {
    class TitleScene
    class GameScene
}

class ExtendedInput
class Main

Main ..> UnderEngineBuilder
UnderEngineBuilder ..> UnderEngine
UnderEngineBuilder ..> AllInput
UnderEngineBuilder ..> ScalableScreen
UnderEngineBuilder ..> JSContext
UnderEngineBuilder ..> CachedImage
UnderEngineBuilder ..> XHTMLMusic
UnderEngineBuilder ..> StackSceneManager

CSVStageParser --> SplitManagementStage
CSVStageParser --> CenterCamera
CSVStageParser --> InvariantBackMap
CSVStageParser --> SequentialWorld
CSVStageParser --> Repulsion
CSVStageParser --> TileObject
CSVStageParser --> RectangleCollider
CSVStageParser --> DefaultMaterial
JSONStageParser --> SplitManagementStage
JSONStageParser --> CenterCamera
JSONStageParser --> SequentialMap
JSONStageParser --> InvariantBackMap
JSONStageParser --> SequentialWorld
JSONStageParser --> Repulsion
JSONStageParser --> TileObject
JSONStageParser --> RectangleCollider
JSONStageParser --> CircleCollider
JSONStageParser --> RoundRectangleCollider
JSONStageParser --> DefaultMaterial

SplitManagementStage "1" *-- "1" Player

@enduml
